{"version":3,"file":"static/js/104.4631f4fe.chunk.js","mappings":"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","sources":["components/Footer.js","components/SidebarOption.js","components/Sidebar.js","components/Header.js","components/SongRow.js","components/Body.js","components/Player.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useStateValue } from \"../utils/StateProvider\";\r\nimport PlayCircleOutlineIcon from '@mui/icons-material/PlayCircleOutline';\r\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious';\r\nimport SkipNextIcon from '@mui/icons-material/SkipNext';\r\nimport ShuffleIcon from '@mui/icons-material/Shuffle';\r\nimport RepeatIcon from '@mui/icons-material/Repeat';\r\nimport VolumeDownIcon from '@mui/icons-material/VolumeDown';\r\nimport PauseCircleOutlineIcon from '@mui/icons-material/PauseCircleOutline';\r\nimport PlaylistPlayIcon from '@mui/icons-material/PlaylistPlay';\r\nimport \"./Footer.css\";\r\nimport { Grid, Slider } from '@mui/material';\r\n\r\nfunction Footer({ spotify }) {\r\n  const [{ item, playing }, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    if (!spotify) return;\r\n\r\n    const fetchPlaybackState = async () => {\r\n      try {\r\n        const r = await spotify.getMyCurrentPlaybackState();\r\n        dispatch({\r\n          type: \"SET_PLAYING\",\r\n          playing: r.is_playing,\r\n        });\r\n        dispatch({\r\n          type: \"SET_ITEM\",\r\n          item: r.item,\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching playback state:\", error);\r\n      }\r\n    };\r\n\r\n    fetchPlaybackState();\r\n  }, [spotify, dispatch]);\r\n\r\n  const handlePlayPause = async () => {\r\n    try {\r\n      if (playing) {\r\n        await spotify.pause();\r\n        dispatch({\r\n          type: \"SET_PLAYING\",\r\n          playing: false,\r\n        });\r\n      } else {\r\n        await spotify.play();\r\n        dispatch({\r\n          type: \"SET_PLAYING\",\r\n          playing: true,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error handling play/pause:\", error);\r\n    }\r\n  };\r\n\r\n  const skipNext = async () => {\r\n    try {\r\n      await spotify.skipToNext();\r\n      const r = await spotify.getMyCurrentPlayingTrack();\r\n      dispatch({\r\n        type: \"SET_ITEM\",\r\n        item: r.item,\r\n      });\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: true,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error skipping to next:\", error);\r\n    }\r\n  };\r\n\r\n  const skipPrevious = async () => {\r\n    try {\r\n      await spotify.skipToPrevious();\r\n      const r = await spotify.getMyCurrentPlayingTrack();\r\n      dispatch({\r\n        type: \"SET_ITEM\",\r\n        item: r.item,\r\n      });\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: true,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error skipping to previous:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer__left\">\r\n        {item && item.album && item.album.images && item.album.images[0] && (\r\n          <img\r\n            className=\"footer__albumLogo\"\r\n            src={item.album.images[0].url}\r\n            alt={item.name}\r\n          />\r\n        )}\r\n        {item ? (\r\n          <div className=\"footer__songInfo\">\r\n            <h4>{item.name}</h4>\r\n            <p>{item.artists.map((artist) => artist.name).join(\", \")}</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"footer__songInfo\">\r\n            <h4>No song is playing</h4>\r\n            <p>...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"footer__center\">\r\n        <ShuffleIcon className=\"footer__green\" />\r\n        <SkipPreviousIcon onClick={skipPrevious} className=\"footer__icon\" />\r\n        {playing ? (\r\n          <PauseCircleOutlineIcon\r\n            onClick={handlePlayPause}\r\n            fontSize=\"large\"\r\n            className=\"footer__icon\"\r\n          />\r\n        ) : (\r\n          <PlayCircleOutlineIcon\r\n            onClick={handlePlayPause}\r\n            fontSize=\"large\"\r\n            className=\"footer__icon\"\r\n          />\r\n        )}\r\n        <SkipNextIcon onClick={skipNext} className=\"footer__icon\" />\r\n        <RepeatIcon className=\"footer__green\" />\r\n      </div>\r\n      <div className=\"footer__right\">\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <PlaylistPlayIcon />\r\n          </Grid>\r\n          <Grid item>\r\n            <VolumeDownIcon />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Slider aria-labelledby=\"continuous-slider\" />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./SidebarOption.css\";\r\n\r\nfunction SidebarOption({ option = \"test\", Icon }) {\r\n  return (\r\n    <div className=\"sidebarOption\">\r\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\r\n      {Icon ? <h4>{option}</h4> : <p>{option}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;\r\n","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport LibraryMusicIcon from '@mui/icons-material/LibraryMusic';\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport { useStateValue } from \"../utils/StateProvider\";\r\n\r\nfunction Sidebar() {\r\n  const [{ playlists }] = useStateValue(); \r\n  console.log(playlists);\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <img\r\n        className=\"sidebar__logo\"\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"\"\r\n      />\r\n      <SidebarOption Icon={HomeIcon} option=\"Home\" />\r\n      <SidebarOption Icon={SearchIcon} option=\"Search\" />\r\n      <SidebarOption Icon={LibraryMusicIcon} option=\"Your Library\" />\r\n      <br />\r\n      <SidebarOption Icon={AddCircleOutlineIcon} option=\"Create Playlist\" />\r\n      <SidebarOption Icon={FavoriteIcon} option=\"Liked Songs\" />\r\n      <strong className=\"sidebar__title\">PLAYLISTS</strong>\r\n      <hr />\r\n      {playlists?.items?.map((playlist) => (\r\n        <SidebarOption key={playlist.id} option={playlist.name} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./Header.css\";\r\nimport { useStateValue } from \"../utils/StateProvider\";\r\nimport { Avatar } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\nfunction Header({ spotify }) {\r\n  const [{ user }, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      if (!spotify) return;\r\n      try {\r\n        const userData = await spotify.getMe();\r\n        dispatch({\r\n          type: \"SET_USER\",\r\n          user: userData,\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUser();\r\n  }, [spotify, dispatch]);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__left\">\r\n        <SearchIcon />\r\n        <input\r\n          placeholder=\"Search for Artists, Songs, or Podcasts\"\r\n          type=\"text\"\r\n        />\r\n      </div>\r\n      <div className=\"header__right\">\r\n        {user && (\r\n          <>\r\n            <Avatar alt={user.display_name} src={user.images[0]?.url} />\r\n            <h4>{user.display_name}</h4>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./SongRow.css\";\r\n\r\nfunction SongRow({ track, playSong }) {\r\n  console.log(track);\r\n  return (\r\n    <div className=\"songRow\" onClick={() => playSong(track.id)}>\r\n      <img className=\"songRow__album\" src={track.album.images[0].url} alt=\"\" />\r\n      <div className=\"songRow__info\">\r\n        <h1>{track.name}</h1>\r\n        <p>\r\n          {track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\r\n          {track.album.name}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SongRow;","import React from \"react\";\r\nimport \"./Body.css\";\r\nimport Header from \"./Header\";\r\nimport { useStateValue } from \"../utils/StateProvider\";\r\nimport SongRow from \"./SongRow\";\r\nimport PlayCircleFilledIcon from '@mui/icons-material/PlayCircleFilled';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\n\r\nfunction Body({ spotify }) {\r\n  const [{ discover_weekly }, dispatch] = useStateValue();\r\n\r\n  const playPlaylist = () => {\r\n    spotify\r\n      .play({\r\n        context_uri: `spotify:playlist:37i9dQZEVXcJZyENOWUFo7`,\r\n      })\r\n      .then((res) => {\r\n        spotify.getMyCurrentPlayingTrack().then((r) => {\r\n          dispatch({\r\n            type: \"SET_ITEM\",\r\n            item: r.item,\r\n          });\r\n          dispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: true,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  const playSong = (id) => {\r\n    spotify\r\n      .play({\r\n        uris: [`spotify:track:${id}`],\r\n      })\r\n      .then((res) => {\r\n        spotify.getMyCurrentPlayingTrack().then((r) => {\r\n          dispatch({\r\n            type: \"SET_ITEM\",\r\n            item: r.item,\r\n          });\r\n          dispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: true,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <Header spotify={spotify} />\r\n\r\n      <div className=\"body__info\">\r\n        <img src={discover_weekly?.images[0].url} alt=\"\" />\r\n        <div className=\"body__infoText\">\r\n          <strong>PLAYLIST</strong>\r\n          <h2>Discover Weekly</h2>\r\n          <p>{discover_weekly?.description}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"body__songs\">\r\n        <div className=\"body__icons\">\r\n          <PlayCircleFilledIcon\r\n            className=\"body__shuffle\"\r\n            onClick={playPlaylist}\r\n          />\r\n          <FavoriteIcon fontSize=\"large\" />\r\n          <MoreHorizIcon />\r\n        </div>\r\n\r\n        {discover_weekly?.tracks.items.map((item) => (\r\n          <SongRow key={item.track.id} playSong={playSong} track={item.track} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport \"./Player.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Body from \"./Body\";\r\n\r\nfunction Player({ spotify }) {\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"player__body\">\r\n        <Sidebar />\r\n        <Body spotify={spotify} />\r\n      </div>\r\n      <Footer spotify={spotify} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player;"],"names":["_ref","spotify","item","playing","dispatch","useStateValue","useEffect","async","r","getMyCurrentPlaybackState","type","is_playing","error","console","fetchPlaybackState","handlePlayPause","pause","play","_jsxs","className","children","album","images","_jsx","src","url","alt","name","artists","map","artist","join","ShuffleIcon","SkipPreviousIcon","onClick","skipToPrevious","getMyCurrentPlayingTrack","PauseCircleOutlineIcon","fontSize","PlayCircleOutlineIcon","SkipNextIcon","skipToNext","RepeatIcon","Grid","container","spacing","PlaylistPlayIcon","VolumeDownIcon","xs","Slider","option","Icon","_playlists$items","playlists","log","SidebarOption","HomeIcon","SearchIcon","LibraryMusicIcon","AddCircleOutlineIcon","FavoriteIcon","items","playlist","id","_user$images$","user","userData","getMe","fetchUser","placeholder","_Fragment","Avatar","display_name","track","playSong","discover_weekly","uris","concat","then","res","Header","description","PlayCircleFilledIcon","playPlaylist","context_uri","MoreHorizIcon","tracks","SongRow","Sidebar","Body","Footer"],"sourceRoot":""}